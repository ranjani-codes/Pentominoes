import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class Window extends javax.swing.JFrame {
  // Variables declaration - do not modify
  public javax.swing.JLabel A;
  public javax.swing.JLabel B;
  public javax.swing.JLabel C;
  public javax.swing.JRadioButton GA;
  public javax.swing.JLabel algType;
  public javax.swing.JLabel defVal;
  public javax.swing.JRadioButton hyb;
  public javax.swing.JRadioButton mVal;
  public javax.swing.JRadioButton mVol;
  public javax.swing.JRadioButton no;
  public javax.swing.JCheckBox opt;
  public javax.swing.JLabel packType;
  public javax.swing.JRadioButton parc;
  public javax.swing.JRadioButton pent;
  public javax.swing.JLabel val;
  public javax.swing.JTextField val1;
  public javax.swing.JTextField val2;
  public javax.swing.JTextField val3;
  public javax.swing.JRadioButton yes;
  public javax.swing.JButton go;

  public static boolean pentGA;

  // End of variables declaration
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    public void initComponents() {

        ButtonGroup group1 = new ButtonGroup();
        ButtonGroup group2 = new ButtonGroup();
        ButtonGroup group3 = new ButtonGroup();
        ButtonGroup group4 = new ButtonGroup();


        parc = new javax.swing.JRadioButton("Parcels");
        packType = new javax.swing.JLabel();
        val = new javax.swing.JLabel();
        pent = new javax.swing.JRadioButton("Pentominos");
        val1 = new javax.swing.JTextField();
        val2 = new javax.swing.JTextField();
        val3 = new javax.swing.JTextField();
        A = new javax.swing.JLabel();
        B = new javax.swing.JLabel();
        C = new javax.swing.JLabel();
        algType = new javax.swing.JLabel();
        hyb = new javax.swing.JRadioButton("Hybrid");
        GA = new javax.swing.JRadioButton("Genetic Algorithm");
        mVal = new javax.swing.JRadioButton("Maximum Value");
        mVol = new javax.swing.JRadioButton("Maximum Volume");
        opt = new javax.swing.JCheckBox();
        defVal = new javax.swing.JLabel();
        yes = new javax.swing.JRadioButton("Yes");
        no = new javax.swing.JRadioButton("No");
        go = new javax.swing.JButton("GO");

        group1.add(parc);
        group1.add(pent);
        group2.add(hyb);
        group2.add(GA);
        group3.add(yes);
        group3.add(no);
        group4.add(mVol);
        group4.add(mVal);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        packType.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        packType.setText("Package Type");

        parc.addActionListener(new ActionListener(){
          public void actionPerformed(ActionEvent e) {
            pentGA = false;
          }
        });

        pent.addActionListener(new ActionListener(){
          public void actionPerformed(ActionEvent e) {
            pentGA = true;
          }
        });

        algType.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        algType.setText("Algorithm Type");

        hyb.addActionListener(new ActionListener(){
          public void actionPerformed(ActionEvent e) {
            parcels_GA.BruteForce = true;
            pentominos_GA.BruteForce =  true;
          }
        });

        GA.addActionListener(new ActionListener(){
          public void actionPerformed(ActionEvent e) {
            parcels_GA.BruteForce = false;
            pentominos_GA.BruteForce =  false;
          }
        });

        opt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        opt.setText("Optimisation Problem");

        mVal.setEnabled(false);
        mVol.setEnabled(false);

        mVal.addActionListener(new ActionListener(){
          public void actionPerformed(ActionEvent e) {
            parcels_GA.ValueBoolean = true;
            pentominos_GA.ValueBoolean = true;
          }
        });
        mVol.addActionListener(new ActionListener(){
          public void actionPerformed(ActionEvent e) {
            parcels_GA.ValueBoolean = false;
            pentominos_GA.ValueBoolean = false;
          }
        });
        opt.addItemListener(new ItemListener() {
             public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.DESELECTED){
                  mVal.setEnabled(false);
                  mVol.setEnabled(false);
                }
                else{
                  mVal.setEnabled(true);
                  mVol.setEnabled(true);
                }
              }
          });

          defVal.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
          defVal.setText("Default Values?");

          yes.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e) {
              val1.setText("3");
              val2.setText("4");
              val3.setText("5");
              val1.setEditable(false);
              val2.setEditable(false);
              val3.setEditable(false);

          }
          });

          no.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e) {
              val1.setEditable(true);
              val2.setEditable(true);
              val3.setEditable(true);

            }
          });

        val.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        val.setText("Values");

        A.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        A.setText("A/L");

        B.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        B.setText("B/P");

        C.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        C.setText("C/T");

        go.addActionListener(new ActionListener(){
          public void actionPerformed(ActionEvent e) {
            go.setEnabled(false);
            parcels_GA.weight_A = Integer.parseInt(val1.getText());
            parcels_GA.weight_B = Integer.parseInt(val2.getText());
            parcels_GA.weight_C = Integer.parseInt(val3.getText());

            pentominos_GA.weight_L = Integer.parseInt(val1.getText());
            pentominos_GA.weight_P = Integer.parseInt(val2.getText());
            pentominos_GA.weight_T = Integer.parseInt(val3.getText());

            if(pentGA){
              pentominos_GA.run();
            }
            else{
            parcels_GA.run();
            }
            Container.go = true;
            
          }
        });







        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pent)
                    .addComponent(parc)
                    .addComponent(packType))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(algType)
                    .addComponent(hyb)
                    .addComponent(GA))
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(opt)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147))
                    .addComponent(mVol)
                    .addComponent(mVal))
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(defVal)
                        .addGap(0, 81, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(yes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(A)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(no)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(val)
                    .addComponent(val1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(val2)
                    .addComponent(val3))
                .addGap(27, 27, 27))
                .addGroup(layout.createSequentialGroup()
                        .addGap(524, 524, 524)
                        .addComponent(go)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          );
          layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(packType)
                    .addComponent(algType)
                    .addComponent(opt)
                    .addComponent(val)
                    .addComponent(defVal))
                .addGap(31, 31, 31)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parc)
                    .addComponent(hyb)
                    .addComponent(mVal)
                    .addComponent(yes)
                    .addComponent(A)
                    .addComponent(val1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B)
                    .addComponent(val2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pent)
                    .addComponent(GA)
                    .addComponent(mVol)
                    .addComponent(C)
                    .addComponent(val3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(no))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                    .addComponent(go)
                    .addContainerGap())
            );

        pack();
    }// </editor-fold>


}
